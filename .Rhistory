paletteCol <- primary.colors(20, steps = 3, no.white = TRUE)
plot(tsne$Y[,1],tsne$Y[,2],pch=20,col=paletteCol[as.integer(as.factor(metadata[colnames(counts.hvg),"embryo"]))], main="embryo")
legend(x="topright",fill=unique(paletteCol[as.integer(as.factor(metadata[colnames(counts.hvg),"embryo"]))]),legend=unique(as.factor(metadata[colnames(counts.hvg),"embryo"])),inset=c(-0.4,0))
plot(tsne$Y[,1],tsne$Y[,2],pch=20,col=paletteCol[as.integer(as.factor(metadata[colnames(counts.hvg),"embryo"]))], main="embryo")
legend(x="topright",fill=unique(paletteCol[as.integer(as.factor(metadata[colnames(counts.hvg),"embryo"]))]),legend=unique(as.factor(metadata[colnames(counts.hvg),"embryo"])),inset=c(-0.4,0))
plot(tsne$Y[,1],tsne$Y[,2],pch=20,col=as.character(metadata[colnames(counts.hvg),"cluster"]),main="cluster")
plot(tsne$Y[,1],tsne$Y[,2],pch=20,col=paletteCol[as.integer(as.factor(metadata[colnames(counts.hvg),"embryo"]))], main="embryo")
plot(tsne$Y[,1],tsne$Y[,2],pch=20,col=paletteCol[as.integer(as.factor(metadata[colnames(counts.hvg),"embryoStage"]))],main="embryoStage")
countsPCA <- prcomp_irlba(t(counts.hvg),n=50)
countsPCA <- irlba::prcomp_irlba(t(counts.hvg),n=50)
countsPCAx <- countsPCA$x[,1:50]
rownames(countsPCAx)<-colnames(counts)
graph <- scran::buildKNNGraph(as.matrix(t(countsPCAx)),k=15)
library(igraph)
library(moduleColor)
louv <- igraph::cluster_louvain(graph, weights = NULL)
clustersLouv <- igraph::membership(louv)
names(clustersLouv) <-rownames(countsPCAx)
library(igraph)
library(moduleColor)
louv <- igraph::cluster_louvain(graph, weights = NULL)
clustersLouv <- igraph::membership(louv)
names(clustersLouv) <-rownames(countsPCAx)
library(moduleColor)
clustColLouv<-labels2colors(clustersLouv)
names(clustColLouv)<-names(clustersLouv)
plot(countsPCAx[,1],countsPCAx[,2],pch=20,col=clustColLouv,
main="Stage",xlab="PC1",ylab="PC2")
plot(countsPCAx[,3],countsPCAx[,2],pch=20,col=clustColLouv,
main="Stage",xlab="PC1",ylab="PC2")
graph <- scran::buildKNNGraph(as.matrix(t(countsPCAx)),k=10)
library(igraph)
library(moduleColor)
louv <- igraph::cluster_louvain(graph, weights = NULL)
clustersLouv <- igraph::membership(louv)
names(clustersLouv) <-rownames(countsPCAx)
library(moduleColor)
clustColLouv<-labels2colors(clustersLouv)
names(clustColLouv)<-names(clustersLouv)
plot(countsPCAx[,1],countsPCAx[,2],pch=20,col=clustColLouv,
main="Stage",xlab="PC1",ylab="PC2")
plot(countsPCAx[,3],countsPCAx[,2],pch=20,col=clustColLouv,
main="Stage",xlab="PC1",ylab="PC2")
clustColLouvSorted <- sort(clustColLouv)
load(file=paste0(wd,"PhD_BPS32/release4/bloodJourneys/rda/20180606_markersForClustHI_TARGET.rda"))
markersGroupsHI
markersGroupsHISorted <- markersGroups[order(markersGroupsHISorted$logFC,decreasing=T),]
markersGroupsHISorted <- markersGroupsHI[order(markersGroupsHI$logFC,decreasing=T),]
gplots::heatmap.2(data[genesPlot,names(clustColLouvSorted)], trace="none",
col=palette,
Colv = FALSE, Rowv = TRUE,
ColSideColors = clustColLouvSorted,
#RowSideColors = cols,
dendrogram = "none", density.info = 'none', labRow = anSeq::getGeneName(genesPlot)[[2]],key=FALSE,labCol="")
genesPlot <- rownames(markersGroupsHISorted)[1:50]
gplots::heatmap.2(data[genesPlot,names(clustColLouvSorted)], trace="none",
col=palette,
Colv = FALSE, Rowv = TRUE,
ColSideColors = clustColLouvSorted,
#RowSideColors = cols,
dendrogram = "none", density.info = 'none', labRow = anSeq::getGeneName(genesPlot)[[2]],key=FALSE,labCol="")
genesPlot
genesPlot%in%
#tiff(paste0(wd,"PhD_BPS32/release4/bloodJourneys/plots/Embryo10Xv4_Preselection6_Blood_bloodtrajHeatmapFirst_20180503_",i,".tiff"),
#     width=10,height=7,units = "in",res=400)
gplots::heatmap.2(counts[genesPlot,names(clustColLouvSorted)], trace="none",
col=palette,
Colv = FALSE, Rowv = TRUE,
ColSideColors = clustColLouvSorted,
#RowSideColors = cols,
dendrogram = "none", density.info = 'none', labRow = anSeq::getGeneName(genesPlot)[[2]],key=FALSE,labCol="")
heatmapCols <- rev(c("#ffffff",
"#f0f0f0",
"#d9d9d9",
"#bdbdbd",
"#969696",
"#737373",
"#525252",
"#252525"))
palette <- colorRampPalette(rev(heatmapCols))(1000)
gplots::heatmap.2(counts[genesPlot,names(clustColLouvSorted)], trace="none",
col=palette,
Colv = FALSE, Rowv = TRUE,
ColSideColors = clustColLouvSorted,
#RowSideColors = cols,
dendrogram = "none", density.info = 'none', labRow = anSeq::getGeneName(genesPlot)[[2]],key=FALSE,labCol="")
markersGroupsHISorted <- markersGroupsHI[order(markersGroupsHI$logFC,decreasing=F),]
markersGroupsHISorted
genesPlot <- rownames(markersGroupsHISorted)[1:50]
anSeq::getGeneName(genesPlot)[[2]]
genesPlot <- rownames(markersGroupsHISorted)[1:50]
load(file=paste0(wd,"PhD_BPS32/release4/bloodJourneys/rda/20180606_markersForClustHI_TARGET.rda"))
markersGroupsHISorted <- markersGroupsHI[order(markersGroupsHI$logFC,decreasing=F),]
genesPlot <- rownames(markersGroupsHISorted)[1:50]
heatmapCols <- rev(c("#ffffff",
"#f0f0f0",
"#d9d9d9",
"#bdbdbd",
"#969696",
"#737373",
"#525252",
"#252525"))
palette <- colorRampPalette(rev(heatmapCols))(1000)
gplots::heatmap.2(counts[genesPlot,names(clustColLouvSorted)], trace="none",
col=palette,
Colv = FALSE, Rowv = TRUE,
ColSideColors = clustColLouvSorted,
#RowSideColors = cols,
dendrogram = "none", density.info = 'none',
labRow = anSeq::getGeneName(genesPlot)[[2]],key=FALSE,labCol="")
genesPlotNames <- c("Tdgf1", "T","Vstm2b",  "Ckb", "Mixl1",
"Dppa5a",        "Car4" ,         "Pwwp2b"  ,      "Pou5f1",
"Ctsc",          "Phlda2" ,       "Bmp2" ,         "Klf5" ,         "Krt18"  ,
"Agpat2" ,            "Plac8" ,        "Rspo3"   ,      "Nkd1"  ,
"Nrg1" ,         "Myl7"   ,       "Sgk3" ,         "Pdlim3"  ,
"Ndufa4l2" , "Asb4"    ,      "Fgf13"  ,
"Prdm6"  ,       ,   "Gpc3" ,         "Socs2"  ,       "Fgf15"  ,       "Ms4a4d" ,
"Opn3"     ,     "Pcdh18"     ,   "Slpi"   ,
"Syndig1l"  ,    "Wnt3")
genesPlotNames <- c("Tdgf1", "T","Vstm2b",  "Ckb", "Mixl1",
"Dppa5a",        "Car4" ,         "Pwwp2b"  ,      "Pou5f1",
"Ctsc",          "Phlda2" ,       "Bmp2" ,         "Klf5" ,         "Krt18"  ,
"Agpat2" ,            "Plac8" ,        "Rspo3"   ,      "Nkd1"  ,
"Nrg1" ,         "Myl7"   ,       "Sgk3" ,         "Pdlim3"  ,
"Ndufa4l2" , "Asb4"    ,      "Fgf13"  ,
"Prdm6"  ,       "Gpc3" ,         "Socs2"  ,       "Fgf15"  ,       "Ms4a4d" ,
"Opn3"     ,     "Pcdh18"     ,   "Slpi"   ,
"Syndig1l"  ,    "Wnt3")
gplots::heatmap.2(counts[anSeq::getGeneID(genesPlotNames)[[2]],names(clustColLouvSorted)], trace="none",
col=palette,
Colv = FALSE, Rowv = TRUE,
ColSideColors = clustColLouvSorted,
#RowSideColors = cols,
dendrogram = "none", density.info = 'none',
labRow =genesPlotNames,key=FALSE,labCol="")
anSeq::getGeneID(genesPlotNames)[[2]]
anSeq::getGeneID(genesPlotNames)[[2]]%in%rownames(counts)
gplots::heatmap.2(counts[anSeq::getGeneID(genesPlotNames)[[2]][bool],names(clustColLouvSorted)], trace="none",
col=palette,
Colv = FALSE, Rowv = TRUE,
ColSideColors = clustColLouvSorted,
#RowSideColors = cols,
dendrogram = "none", density.info = 'none',
labRow =genesPlotNames[bool],key=FALSE,labCol="")
bool <- anSeq::getGeneID(genesPlotNames)[[2]]%in%rownames(counts)
gplots::heatmap.2(counts[anSeq::getGeneID(genesPlotNames)[[2]][bool],names(clustColLouvSorted)], trace="none",
col=palette,
Colv = FALSE, Rowv = TRUE,
ColSideColors = clustColLouvSorted,
#RowSideColors = cols,
dendrogram = "none", density.info = 'none',
labRow =genesPlotNames[bool],key=FALSE,labCol="")
genesPlotNames[bool]
genesPlotNames
anSeq::getGeneID(genesPlotNames)[[2]]
anSeq::getGeneID(genesPlotNames)[[2]]%in%rownames(counts)
bool <- anSeq::getGeneID(genesPlotNames)[[2]]%in%rownames(counts)
length(bool)
length(genesPlotNames)
anSeq::getGeneID(genesPlotNames)[[2]]
anSeq::getGeneID(genesPlotNames)[[1]]
genesPlotNames <- c("Tdgf1", "T","Vstm2b",  "Ckb", "Mixl1",
"Dppa5a",        "Car4" ,        # "Pwwp2b"  ,
"Pou5f1",
"Ctsc",          "Phlda2" ,       "Bmp2" ,         "Klf5" ,         "Krt18"  ,
"Agpat2" ,            "Plac8" ,        "Rspo3"   ,      "Nkd1"  ,
"Nrg1" ,         "Myl7"   ,       "Sgk3" ,         "Pdlim3"  ,
"Ndufa4l2" , "Asb4"    ,      "Fgf13"  ,
"Prdm6"  ,       "Gpc3" ,         "Socs2"  ,       "Fgf15"  ,       "Ms4a4d" ,
"Opn3"     ,     "Pcdh18"     ,   "Slpi"   ,
"Syndig1l"  ,    "Wnt3")
heatmapCols <- rev(c("#ffffff",
"#f0f0f0",
"#d9d9d9",
"#bdbdbd",
"#969696",
"#737373",
"#525252",
"#252525"))
palette <- colorRampPalette(rev(heatmapCols))(1000)
bool <- anSeq::getGeneID(genesPlotNames)%in%rownames(counts)
gplots::heatmap.2(counts[anSeq::getGeneID(genesPlotNames)[[2]][bool],names(clustColLouvSorted)], trace="none",
col=palette,
Colv = FALSE, Rowv = TRUE,
ColSideColors = clustColLouvSorted,
#RowSideColors = cols,
dendrogram = "none", density.info = 'none',
labRow =genesPlotNames[bool],key=FALSE,labCol="")
genesPlotNames <- c("Tdgf1", "T","Vstm2b",  "Ckb", "Mixl1",
"Dppa5a",        "Car4" ,        # "Pwwp2b"  ,
"Pou5f1",
"Ctsc",          "Phlda2" ,       "Bmp2" ,         "Klf5" ,         "Krt18"  ,
"Agpat2" ,            "Plac8" ,        "Rspo3"   ,      "Nkd1"  ,
"Nrg1" ,         "Myl7"   ,       "Sgk3" ,         "Pdlim3"  ,
"Ndufa4l2" , "Asb4"    ,      "Fgf13"  ,
"Prdm6"  ,       "Gpc3" ,         "Socs2"  ,       "Fgf15"  ,       "Ms4a4d" ,
"Opn3"     ,     "Pcdh18"     ,   "Slpi"   ,
"Syndig1l"  ,    "Wnt3")
heatmapCols <- rev(c("#ffffff",
"#f0f0f0",
"#d9d9d9",
"#bdbdbd",
"#969696",
"#737373",
"#525252",
"#252525"))
palette <- colorRampPalette(rev(heatmapCols))(1000)
bool <- anSeq::getGeneID(genesPlotNames)%in%rownames(counts)
bool
bool
bool <- anSeq::getGeneID(genesPlotNames)[[2]]%in%rownames(counts)
gplots::heatmap.2(counts[anSeq::getGeneID(genesPlotNames)[[2]][bool],names(clustColLouvSorted)], trace="none",
col=palette,
Colv = FALSE, Rowv = TRUE,
ColSideColors = clustColLouvSorted,
#RowSideColors = cols,
dendrogram = "none", density.info = 'none',
labRow =genesPlotNames[bool],key=FALSE,labCol="")
colnames(metadata)
plot(tsne$Y[,1],tsne$Y[,2],pch=20,col=paletteCol[as.integer(as.factor(metadata[colnames(counts.hvg),"embryo"]))], main="embryo")
plot(tsne$Y[,1],tsne$Y[,2],pch=20,col=as.character(metadata[colnames(counts.hvg),"cluster"]),main="cluster")
# dev.off()
plot(tsne$Y[,1],tsne$Y[,2],pch=20,col=as.character(metadata[colnames(counts.hvg),"cluster"]),main="cluster")
plot(tsne$Y[,1],tsne$Y[,2],pch=20,col=clustColLouv[colnames(counts.hvg)],main="cluster")
# dev.off()
plot(tsne$Y[,1],tsne$Y[,2],pch=20,col=as.character(metadata[colnames(counts.hvg),"cluster"]),main="cluster")
plot(tsne$Y[,1],tsne$Y[,2],pch=20,col=clustColLouv[colnames(counts.hvg)],main="cluster")
# dev.off()
plot(tsne$Y[,1],tsne$Y[,2],pch=20,col=as.character(metadata[colnames(counts.hvg),"cluster"]),main="cluster")
plot(tsne$Y[,1],tsne$Y[,2],pch=20,col=clustColLouv[colnames(counts.hvg)],main="cluster")
# dev.off()
plot(tsne$Y[,1],tsne$Y[,2],pch=20,col=as.character(metadata[colnames(counts.hvg),"cluster"]),main="cluster")
plot(tsne$Y[,1],tsne$Y[,2],pch=20,col=clustColLouv[colnames(counts.hvg)],main="cluster")
colnames(metadata)
table(clustColLouv,metadata[names(clustColLouv),"embryoStage"])
table(clustColLouv,metadata[names(clustColLouv),"cellCategory"])
clust <- metadata[,"cluster"]
names(clust)<-rownames(metadata)
clust <- sort(clust)
gplots::heatmap.2(counts[anSeq::getGeneID(genesPlotNames)[[2]][bool],names(clust)], trace="none",
col=palette,
Colv = FALSE, Rowv = TRUE,
ColSideColors = clust,
#RowSideColors = cols,
dendrogram = "none", density.info = 'none',
labRow =genesPlotNames[bool],key=FALSE,labCol="")
gplots::heatmap.2(counts[anSeq::getGeneID(genesPlotNames)[[2]][bool],names(clust)], trace="none",
col=palette,
Colv = FALSE, Rowv = TRUE,
ColSideColors = clust,
#RowSideColors = cols,
dendrogram = "none", density.info = 'none',
labRow =genesPlotNames[bool],key=FALSE,labCol="")
names(clust)
anSeq::getGeneID(genesPlotNames)[[2]][bool]
counts[anSeq::getGeneID(genesPlotNames)[[2]][bool],names(clust)]
clust <- clust[names(clust)%in%colnames(counts)]
clust <- sort(clust)
gplots::heatmap.2(counts[anSeq::getGeneID(genesPlotNames)[[2]][bool],names(clust)], trace="none",
col=palette,
Colv = FALSE, Rowv = TRUE,
ColSideColors = clust,
#RowSideColors = cols,
dendrogram = "none", density.info = 'none',
labRow =genesPlotNames[bool],key=FALSE,labCol="")
aggdata <-aggregate(counts[getGeneID("Runx1")[[2]],], by=metadata[colnames(counts),"cluster"],
FUN=mean, na.rm=TRUE)
aggdata <-aggregate(counts[anSeq::getGeneID("Runx1")[[2]],], by=metadata[colnames(counts),"cluster"],
FUN=mean, na.rm=TRUE)
aggdata <-aggregate(counts[anSeq::getGeneID("Runx1")[[2]],], by=list(metadata[colnames(counts),"cluster"]),
FUN=mean, na.rm=TRUE)
aggdata
aggdata <-aggregate(counts[anSeq::getGeneID("Hbb-bh1")[[2]],], by=list(metadata[colnames(counts),"cluster"]),
FUN=mean, na.rm=TRUE)
aggdata
genesPlotNames <- c("Tdgf1", "T","Vstm2b",  "Ckb", "Mixl1",
"Dppa5a",        "Car4" ,        # "Pwwp2b"  ,
"Pou5f1",
"Ctsc",          "Phlda2" ,       "Bmp2" ,         "Klf5" ,         "Krt18"  ,
"Agpat2" ,            "Plac8" ,        "Rspo3"   ,      "Nkd1"  ,
"Nrg1" ,         "Myl7"   ,       "Sgk3" ,         "Pdlim3"  ,
"Ndufa4l2" , "Asb4"    ,      "Fgf13"  ,
"Prdm6"  ,       "Gpc3" ,         "Socs2"  ,       "Fgf15"  ,       "Ms4a4d" ,
"Opn3"     ,     "Pcdh18"     ,   "Slpi"   ,
"Syndig1l"  ,    "Wnt3","Cdh5","Hbb-bh1")
heatmapCols <- rev(c("#ffffff",
"#f0f0f0",
"#d9d9d9",
"#bdbdbd",
"#969696",
"#737373",
"#525252",
"#252525"))
palette <- colorRampPalette(rev(heatmapCols))(1000)
bool <- anSeq::getGeneID(genesPlotNames)[[2]]%in%rownames(counts)
gplots::heatmap.2(counts[anSeq::getGeneID(genesPlotNames)[[2]][bool],names(clustColLouvSorted)], trace="none",
col=palette,
Colv = FALSE, Rowv = TRUE,
ColSideColors = clustColLouvSorted,
#RowSideColors = cols,
dendrogram = "none", density.info = 'none',
labRow =genesPlotNames[bool],key=FALSE,labCol="")
gplots::heatmap.2(counts[anSeq::getGeneID(genesPlotNames)[[2]][bool],names(clust)], trace="none",
col=palette,
Colv = FALSE, Rowv = TRUE,
ColSideColors = clust,
#RowSideColors = cols,
dendrogram = "none", density.info = 'none',
labRow =genesPlotNames[bool],key=FALSE,labCol="")
# dev.off()
plot(tsne$Y[,1],tsne$Y[,2],pch=20,col=as.character(metadata[colnames(counts.hvg),"cluster"]),main="cluster")
plot(tsne$Y[,1],tsne$Y[,2],pch=20,col=clustColLouv[colnames(counts.hvg)],main="cluster")
table(clustColLouv,metadata[names(clustColLouv),"embryoStage"])
# dev.off()
par(mfrow=c(1,2))
plot(tsne$Y[,1],tsne$Y[,2],pch=20,col=as.character(metadata[colnames(counts.hvg),"cluster"]),main="cluster")
plot(tsne$Y[,1],tsne$Y[,2],pch=20,col=clustColLouv[colnames(counts.hvg)],main="cluster")
countsPCA <- irlba::prcomp_irlba(t(counts.hvg),n=100)
countsPCAx <- countsPCA$x[,1:50]
rownames(countsPCAx)<-colnames(counts)
graph <- scran::buildKNNGraph(as.matrix(t(countsPCAx)),k=5)
library(igraph)
library(moduleColor)
louv <- igraph::cluster_louvain(graph, weights = NULL)
clustersLouv <- igraph::membership(louv)
names(clustersLouv) <-rownames(countsPCAx)
library(moduleColor)
clustColLouv<-labels2colors(clustersLouv)
names(clustColLouv)<-names(clustersLouv)
plot(countsPCAx[,1],countsPCAx[,2],pch=20,col=clustColLouv,
main="Stage",xlab="PC1",ylab="PC2")
par(mfrow=c(1,2))
plot(tsne$Y[,1],tsne$Y[,2],pch=20,col=as.character(metadata[colnames(counts.hvg),"cluster"]),main="cluster")
plot(tsne$Y[,1],tsne$Y[,2],pch=20,col=clustColLouv[colnames(counts.hvg)],main="cluster")
graph <- scran::buildKNNGraph(as.matrix(t(countsPCAx)),k=4``)
library(igraph)
library(moduleColor)
louv <- igraph::cluster_louvain(graph, weights = NULL)
graph <- scran::buildKNNGraph(as.matrix(t(countsPCAx)),k=4)
library(igraph)
library(moduleColor)
louv <- igraph::cluster_louvain(graph, weights = NULL)
clustersLouv <- igraph::membership(louv)
names(clustersLouv) <-rownames(countsPCAx)
library(moduleColor)
clustColLouv<-labels2colors(clustersLouv)
names(clustColLouv)<-names(clustersLouv)
plot(countsPCAx[,1],countsPCAx[,2],pch=20,col=clustColLouv,
main="Stage",xlab="PC1",ylab="PC2")
par(mfrow=c(1,2))
plot(tsne$Y[,1],tsne$Y[,2],pch=20,col=as.character(metadata[colnames(counts.hvg),"cluster"]),main="cluster")
plot(tsne$Y[,1],tsne$Y[,2],pch=20,col=clustColLouv[colnames(counts.hvg)],main="cluster")
aggdata <-aggregate(counts[anSeq::getGeneID("Runx1")[[2]],], by=list(clustColLouv),
FUN=mean, na.rm=TRUE)
aggdata
aggdata <-aggregate(counts[anSeq::getGeneID("Cdh5")[[2]],], by=list(clustColLouv),
FUN=mean, na.rm=TRUE)
aggregate(counts[anSeq::getGeneID("Cdh5")[[2]],], by=list(clustColLouv),
FUN=mean, na.rm=TRUE)
aggregate(counts[anSeq::getGeneID("Lyve1")[[2]],], by=list(clustColLouv),
FUN=mean, na.rm=TRUE)
aggregate(counts[anSeq::getGeneID("Fcgr3")[[2]],], by=list(clustColLouv),
FUN=mean, na.rm=TRUE)
wd <- "/Users/blancap/Documents/PhD_CAMBRIDGE/PhD/Experiments/"
bluePal <- c("#BFBFBF","#6495ED","#000000")
redPal <- c("gray","#ff6666","#e60000","#990000")
all_colours = c(
"Allantois" = "#532C8A",#[32] "Allantois"
# "Anterior epiblast" :   "#bf8040",#[28] "Anterior epiblast"
"Cardiac mesenchyme" =  "#F7901D",#[23] "Cardiac mesenchyme"
"Cardiomyocytes" =  "#B51D8D",#[34] "Cardiomyocytes"
"Def. endoderm" = "#F397C0",#[24] "Def. endoderm"
"Early ExE mesoderm" =  "#DFCDE4",#[26] "Early ExE mesoderm"
"Early mixed mesoderm" =  "#C594BF",#[7] "Early mixed mesoderm"
"Early neurectoderm" =  "#A0CC47",#[10] "Early neurectoderm"
"Early paraxial mesoderm" =  "#3F84AA",#[17] "Early paraxial mesoderm"
"Endothelium" = "#B3793B",#[20] "Endothelium"
"Epiblast" =  "#683612",#[1] "Epiblast"
"Erythroid 1" =  "#C72228",#[15] "Erythroid 1"
"Erythroid 2" =  "#EF4E22",#[37] "Erythroid2"
"ExE ectoderm 1" =  "#989898",#[30] "ExE ectoderm 1"
"ExE ectoderm 2" =  "#333333",#[4] "ExE ectoderm 2"
"ExE endoderm" = "#7F6874",#[5] "ExE endoderm"
"ExE mesoderm" =  "#7253A2",#[12] "ExE mesoderm"
"Forebrain" =  "#65A83E",#[8] "Forebrain"
"Foregut" =  "#EF5A9D",#[19] "Foregut"
"Hemato-endothelial progenitors" =  "#FBBE92",#[9] "Hemato-endothelial progenitors"
"Intermediate mesoderm" =  "#139992",#[31] "Intermediate mesoderm"
"Late mixed mesoderm" =  "#C9EBFB",#[13] "Late mixed mesoderm"
"Late parax. mesoderm" =  "#8DB5CE",#[33] "Late paraxial mesoderm (presomitic mesoderm)"
"Midgut/Hindgut"=  "#CE4E82",#[35] "Midgut/Hindgut"
"Midbrain/Hindbrain" =  "#354E23",#[11] "Midbrain/Hindbrain"
"Neural crest" =  "#77783C",#[18] "Neural crest"
"NMP" =  "#8EC792",#[14] "NMPs"
"Notochord" =  "#0F4A9C",#[21] "Notochord"
"PGC" =  "#FACB12",#[25] "PGC"
"Placodes" =  "#BBDCA8",#[27] "Placodes"
"Parietal endoderm" =  "#1A1A1A",#[29] "Parietal endoderm"
"Pre-migratory neural crest" =  "#C3C388",#[36] "Pre-migratory neural crest"
"PS/mesendoderm" =  "#DABE99",#[2] "Primitive Streak"
"Somites" =  "#005579",#[16] "Somites"
"Spinal cord" =  "#CDE088",#[38] "Spinal cord"
"Surface ectoderm" = "#FFF574",#[22] "Surface ectoderm"
"Visceral endoderm" = "#F6BFCB",#[3] "Visceral endoderm"
'Endothelium_black' = '#00264d',
'Endothelium_blue'= '#cc6600',
'Endothelium_brown'= '#3377ff',
'Endothelium_green'= "#cce6ff",
'Endothelium_red'="#ff8000",
'Endothelium_turquoise'= "#ffff00",
'Endothelium_yellow' = "#ffd11a",
'Hematoendo_blue'= "#b3b300",
'Hematoendo_brown'="#ff4da6",
'Hematoendo_green'="#ffbf80",
'Hematoendo_turquoise'="#996633",
'Hematoendo_yellow'="#009900"
)#light green
all_colours_AL = c(
"Allantois" = "#532C8A",#[32] "Allantois"
# "Anterior epiblast" :   "#bf8040",#[28] "Anterior epiblast"
"Cardiac mesenchyme" =  "#F7901D",#[23] "Cardiac mesenchyme"
"Cardiomyocytes" =  "#B51D8D",#[34] "Cardiomyocytes"
"Def. endoderm" = "#F397C0",#[24] "Def. endoderm"
"Early ExE mesoderm" =  "#DFCDE4",#[26] "Early ExE mesoderm"
"Early mixed mesoderm" =  "#C594BF",#[7] "Early mixed mesoderm"
"Early neurectoderm" =  "#A0CC47",#[10] "Early neurectoderm"
"Early paraxial mesoderm" =  "#3F84AA",#[17] "Early paraxial mesoderm"
"Endothelium" = "#B3793B",#[20] "Endothelium"
"Epiblast" =  "#683612",#[1] "Epiblast"
"Erythroid 1" =  "#C72228",#[15] "Erythroid 1"
"Erythroid 2" =  "#EF4E22",#[37] "Erythroid2"
"ExE ectoderm 1" =  "#989898",#[30] "ExE ectoderm 1"
"ExE ectoderm 2" =  "#333333",#[4] "ExE ectoderm 2"
"ExE endoderm" = "#7F6874",#[5] "ExE endoderm"
"ExE mesoderm" =  "#7253A2",#[12] "ExE mesoderm"
"Forebrain" =  "#65A83E",#[8] "Forebrain"
"Foregut" =  "#EF5A9D",#[19] "Foregut"
"Hemato-endothelial progenitors" =  "#FBBE92",#[9] "Hemato-endothelial progenitors"
"Intermediate mesoderm" =  "#139992",#[31] "Intermediate mesoderm"
"Late mixed mesoderm" =  "#C9EBFB",#[13] "Late mixed mesoderm"
"Late parax. mesoderm" =  "#8DB5CE",#[33] "Late paraxial mesoderm (presomitic mesoderm)"
"Midgut/Hindgut"=  "#CE4E82",#[35] "Midgut/Hindgut"
"Midbrain/Hindbrain" =  "#354E23",#[11] "Midbrain/Hindbrain"
"Neural crest" =  "#77783C",#[18] "Neural crest"
"NMP" =  "#8EC792",#[14] "NMPs"
"Notochord" =  "#0F4A9C",#[21] "Notochord"
"PGC" =  "#FACB12",#[25] "PGC"
"Placodes" =  "#BBDCA8",#[27] "Placodes"
"Parietal endoderm" =  "#1A1A1A",#[29] "Parietal endoderm"
"Pre-migratory neural crest" =  "#C3C388",#[36] "Pre-migratory neural crest"
"PS/mesendoderm" =  "#DABE99",#[2] "Primitive Streak"
"Somites" =  "#005579",#[16] "Somites"
"Spinal cord" =  "#CDE088",#[38] "Spinal cord"
"Surface ectoderm" = "#FFF574",#[22] "Surface ectoderm"
"Visceral endoderm" = "#F6BFCB",#[3] "Visceral endoderm"
'D' = '#00264d',
'G'= '#cc6600',
'C'= '#3377ff',
'B'= "#cce6ff",
'A1'="#ffe5cc",
'A2'="#ffbf7f",
'A3'="#ff8000",
'A4'="#663300",
'F'= "#ffff00",
'E' = "#ffd11a",
'I'= "#b3b300",
'L1'="#ffb7db",
'L2'="#ff4da6",
'L3'="#cc3d84",
'L4'="#7f2653",
'K'="#ffbf80",
'J'="#996633",
'H'="#009900"
)#light green
subcluster_lab <- c(
'Endothelium_black' = 'D',
'Endothelium_blue'= 'G',
'Endothelium_brown'= 'C',
'Endothelium_green'= "B",
'Endothelium_red'="A",
'Endothelium_turquoise'= "F",
'Endothelium_yellow' = "E",
'Hematoendo_blue'= "I",
'Hematoendo_brown'="L",
'Hematoendo_green'="K",
'Hematoendo_turquoise'="J",
'Hematoendo_yellow'="H"
)
stages <- c(
"E6.5" ="#E3FCFA",
"E6.75" = "#C1ECEF",
"E7.0" ="#A3D4E3",
"E7.25" ="#86B8D6",
"E7.5"="#6C98CA",
"E7.75"="#5476BE",
"E8.0"="#3E52B1",
"E8.25"="#2B2DA5",
"E8.5"="#2B1999",
"mixed_gastrulation"="gray"
)
##=========================
# Finding a common progenitor - Differential expression between I,J,K vs the rest.
##=========================
metaSub <- read.table(file=paste0(wd,"PhD_BPS32/release4/data/rawData/metaSub_bloodJourneys_10_clusterAnn_noDoub_20180604.tab"),
header=TRUE,sep="\t")
rownames(metaSub) <-metaSub$cell
table(metaSub$subclustLA)
table(metaSub$subclust)
setwd("/Users/blancap/Documents/repos_bitbucket/r-packages/00.PACKAGES/proSeq_development/proSeq")
roxygen2::roxygenize()
setwd("/Users/blancap/Documents/repos_bitbucket/r-packages/00.PACKAGES/proSeq_development/proSeq")
roxygen2::roxygenize()
